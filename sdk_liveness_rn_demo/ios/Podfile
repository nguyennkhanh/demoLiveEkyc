# Uncomment the next line to define a global platform for your project
# platform :ios, '9.0'

target 'rn_ekyc_demo' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!

  # Pods for rn_ekyc_demo

  target 'rn_ekyc_demoTests' do
    inherit! :search_paths
    # Pods for testing
  end

    post_install do |installer|
      ## Fix for XCode 12.5

    find_and_replace("../node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm",
    "_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules", "_initializeModules:(NSArray<Class> *)modules")

    find_and_replace("../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm",
      "RCTBridgeModuleNameForClass(module))", "RCTBridgeModuleNameForClass([module class]))")


    find_and_replace("../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm",
    "RCTBridgeModuleNameForClass(strongModule))",
    "RCTBridgeModuleNameForClass(Class(strongModule)))")

  end 

  def find_and_replace(dir, findstr, replacestr)
    Dir[dir].each do |name|
        text = File.read(name)
        replace = text.gsub(findstr,replacestr)
        if text != replace
            puts "Fix: " + name
            File.open(name, "w") { |file| file.puts replace }
            STDOUT.flush
        end
    end
    Dir[dir + '*/'].each(&method(:find_and_replace))
  end

end

